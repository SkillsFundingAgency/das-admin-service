@using SFA.DAS.AssessorService.ApplyTypes
@using SFA.DAS.AdminService.Web.Helpers;
@using SFA.DAS.AdminService.Common.Extensions;

@model SFA.DAS.AdminService.Web.ViewModels.Apply.Applications.RoatpSequenceViewModel

@{
    ViewBag.Title = "Application overview";
}

<a class="govuk-back-link" asp-controller="RoatpApplication" asp-action="Application" asp-route-applicationid="@Model.ApplicationId">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @if (Model.Sections == null)
            {
                <h1 class="govuk-heading-xl">Sequence not active</h1>
            }
            else
            {
                <h1 class="govuk-heading-xl">Application overview</h1>

                <partial name="~/Views/Roatp/Apply/_OrganisationDetails.cshtml" />

                <ul class="govuk-list">
                    @foreach (var applicationSection in Model.Sections.OrderBy(s => s.SectionNo))
                    {
                    <li>
                        <h2 class="govuk-heading-m">
                            <a class="govuk-link" href="@Url.Action("Section", "RoatpApplication", new {Model.ApplicationId, applicationSection.SequenceNo, applicationSection.SectionNo})">
                                @applicationSection.LinkTitle
                            </a>
                        </h2>
                        <span id="company-details-hint" class="govuk-hint">
                            @applicationSection.QnAData.Pages.Count(x => x.Complete == true) of @applicationSection.QnAData.Pages.Count(x => x.Active) questions completed
                        </span>

                        @if (applicationSection.QnAData.Pages.Any(p => p.HasNewFeedback))
                        {
                            <div class="govuk-tag">
                                Feedback added
                            </div>
                        }

                        @if (applicationSection.QnAData.RequestedFeedbackAnswered == true)
                        {
                            <div class="govuk-tag">
                                Answer updated
                            </div>
                        }

                        @* NOTE: Not too sure this is the appropriate way to check, but it works for now :) *@
                        @if (Model.ApplySections.Any(section => section.SectionId == applicationSection.Id && section.Status == ApplicationSectionStatus.Evaluated))
                        {
                            <div class="govuk-tag">
                                Evaluated
                            </div>
                        }
                        @if (!String.IsNullOrWhiteSpace(applicationSection.Status))
                        {
                            <div class="govuk-tag">
                                @Html.Raw(applicationSection.Status)
                            </div>
                        }
                        <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
                    </li>
                    }
                </ul>

                @if (Model.ApplySections.All(s => s.Status == ApplicationSectionStatus.Evaluated || s.NotRequired))
                {
                    <form class="js-disable-on-submit" asp-controller="RoatpApplication" asp-action="Assessment" asp-route-applicationId="@Model.ApplicationId" asp-route-sequenceNo="@Model.SequenceNo" method="get">
                        <button class="govuk-button" type="submit">Complete review</button>
                    </form>
                }
            }

            <p class="govuk-body">
                <a class="govuk-link" asp-controller="RoatpApplication" asp-action="Application" asp-route-applicationid="@Model.ApplicationId">Return to application overview</a>
            </p>
        </div>`
    </div>
</main>