@using SFA.DAS.AssessorService.ApplyTypes
@using SFA.DAS.AdminService.Web.Helpers;
@using SFA.DAS.AssessorService.Domain.Extensions

@model SFA.DAS.AdminService.Web.ViewModels.Apply.Applications.SequenceViewModel

@{
    ViewBag.Title = "Application overview";
    var Fragment = ApplicationReviewHelpers.ApplicationFragment(Model.ReviewStatus);
}

<a class="govuk-back-link" 
   asp-action="@Model.BackAction" 
   asp-controller="@Model.BackController" 
   asp-route-organisationId="@Model.BackOrganisationId" 
   asp-fragment="@Fragment">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @if (Model.Sections == null)
            {
                <h1 class="govuk-heading-xl">Sequence not active</h1>
            }
            else
            {
                <h1 class="govuk-heading-xl">Application overview</h1>

                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    @if (!string.IsNullOrWhiteSpace(Model.ApplicationReference))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Application reference</dt>
                            <dd class="govuk-summary-list__value">@Model.ApplicationReference</dd>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Standard) && Model.SequenceNo == 2)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Standard</dt>
                            <dd class="govuk-summary-list__value">@Model.Standard</dd>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.LegalName))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Registered name</dt>
                            <dd class="govuk-summary-list__value">@Model.LegalName</dd>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.TradingName) || !string.IsNullOrWhiteSpace(Model.ProviderName))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Trading name</dt>
                            <dd class="govuk-summary-list__value">@(Model.TradingName ?? Model.ProviderName)</dd>
                        </div>
                    }
                    @if (Model.Ukprn.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">UKPRN</dt>
                            <dd class="govuk-summary-list__value">@Model.Ukprn</dd>
                        </div>
                    }
                    @if (Model.FinancialDueDate.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Financial due date</dt>
                            <dd class="govuk-summary-list__value">@Model.FinancialDueDate.ToSfaShortDateString()</dd>
                        </div>
                    }
                </dl>

                @if (!string.IsNullOrWhiteSpace(Model.CompanyNumber))
                {
                    <p class="govuk-body">
                        <a class="govuk-link" target="_blank" href="@string.Format("https://beta.companieshouse.gov.uk/company/{0}", Model.CompanyNumber)">View companies house information</a>
                    </p>
                    <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
                }

                <ul class="govuk-list">
                    @foreach (var applicationSection in Model.Sections.OrderBy(s => s.SectionNo))
                    {
                        if (applicationSection.SequenceNo == 1 && applicationSection.SectionNo == 3 && !(Model.FinancialReviewStatus == FinancialReviewStatus.Graded ||  Model.FinancialReviewStatus == FinancialReviewStatus.Approved || Model.FinancialReviewStatus == FinancialReviewStatus.Rejected))
                        {
                            // NOTE: FHA Section should only be shown if it has been Graded, Approved or Rejected. See ON-1277
                            continue;
                        }
                        <li>
                            <h2 class="govuk-heading-m">
                                <a class="govuk-link"
                                   asp-action="Section"
                                   asp-controller="Application" ,
                                   asp-route-applicationId="@Model.ApplicationId"
                                   asp-route-sequenceNo="@applicationSection.SequenceNo"
                                   asp-route-sectionNo="@applicationSection.SectionNo"
                                   asp-route-backAction="@Model.BackAction"
                                   asp-route-backController="@Model.BackController"
                                   asp-route-backOrganisationId="@Model.BackOrganisationId">
                                    @applicationSection.LinkTitle
                                </a>
                            </h2>
                            <span id="company-details-hint" class="govuk-hint">
                                @applicationSection.QnAData.Pages.Count(x => x.Complete == true) of @applicationSection.QnAData.Pages.Count(x => x.Active) questions completed
                            </span>

                            @if (applicationSection.QnAData.Pages.Any(p => p.HasNewFeedback))
                            {
                                <div class="govuk-tag">
                                    Feedback added
                                </div>
                            }

                            @if (applicationSection.QnAData.RequestedFeedbackAnswered == true)
                            {
                                <div class="govuk-tag">
                                    Answer updated
                                </div>
                            }

                            @* NOTE: Not too sure this is the appropriate way to check, but it works for now :) *@
                            @if (Model.ApplySections.Any(section => section.SectionId == applicationSection.Id && section.Status == ApplicationSectionStatus.Evaluated))
                            {
                                <div class="govuk-tag">
                                    Evaluated
                                </div>
                            }
                            <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
                        </li>
                    }
                </ul>

                @if (Model.ApplySections.All(s => s.Status == ApplicationSectionStatus.Evaluated || s.NotRequired))
                {
                    <form 
                          class="js-disable-on-submit" 
                          asp-controller="Application" 
                          asp-action="Assessment" 
                          asp-route-applicationId="@Model.ApplicationId" 
                          asp-route-sequenceNo="@Model.SequenceNo"
                          asp-route-backAction="@Model.BackAction"
                          asp-route-backController="@Model.BackController"
                          asp-route-backOrganisationId="@Model.BackOrganisationId"
                          method="get">
                        <button class="govuk-button" type="submit">Complete review</button>
                    </form>
                }
            }

            <p class="govuk-body">
                <a class="govuk-link" 
                   asp-action="@Model.BackAction" 
                   asp-controller="@Model.BackController" 
                   asp-route-organisationId="@Model.BackOrganisationId" 
                   asp-fragment="@Fragment">Return to applications</a>
            </p>
        </div>`
    </div>
</main>