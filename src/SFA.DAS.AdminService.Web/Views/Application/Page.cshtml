@using SFA.DAS.AssessorService.ApplyTypes
@model SFA.DAS.AdminService.Web.ViewModels.Apply.Applications.PageViewModel

@{
    ViewBag.Title = @Model.Title ?? "Page not active";
    Layout = "_Layout";
}

<a 
   class="govuk-back-link" 
   asp-action="Section" 
   asp-controller="Application" 
   asp-route-applicationId="@Model.ApplicationId" 
   asp-route-sequenceNo="@Model.SequenceNo" 
   asp-route-sectionNo="@Model.SectionNo" 
   asp-route-backAction="@Model.BackAction" 
   asp-route-backController="@Model.BackController" 
   asp-route-backOrganisationId="@Model.BackOrganisationId">
    Back
</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    @if (Model.Page == null)
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">Page not active</h1>
            </div>
        </div>

    }
    else
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
                        <h2 class="govuk-error-summary__title" id="error-summary-title">
                            There is a problem
                        </h2>
                        <div class="govuk-error-summary__body">
                            <ul class="govuk-list govuk-error-summary__list">
                                <li>
                                    <a sfa-validation-for="FeedbackMessage"></a>
                                </li>
                            </ul>
                        </div>
                    </div>
                }

                <h1 class="govuk-heading-xl">@Model.Title</h1>

                @foreach (var pageOfAnswers in Model.Page.PageOfAnswers)
                {
                    <table class="govuk-table govuk-table--s">
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th class="govuk-table__header" scope="col">Question</th>
                                <th class="govuk-table__header" scope="col">Answer</th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            @foreach (var answer in pageOfAnswers.Answers)
                            {
                                var question = Model.Page.Questions.SingleOrDefault(x => x.QuestionId == answer.QuestionId);
                                if (question != null)
                                {
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">@question.Label</td>

                                @if (question.Input.Type == "FileUpload")
                                {
                                    <td class="govuk-table__cell">
                                        <a class="govuk-link" href="@Url.Action("DownloadFile", "Application",
                                                new
                                                {
                                                    Id = Model.ApplicationId,
                                                    sequenceNo = Model.SequenceNo,
                                                    sectionNo = Model.SectionNo,
                                                    pageId = Model.Page.PageId,
                                                    questionId = answer.QuestionId,
                                                    filename = answer.Value
                                                })">
                                            @answer.Value
                                        </a>
                                    </td>
                                }
                                else if (question != null && question.Input.Type == "Address")
                                {
                                    var address = Model.Addresses[question.QuestionId];
                                    if (address != null)
                                    {
                                        <td class="govuk-table__cell">
                                            @address.CommaSeperatedAddress()
                                        </td>
                                    }
                                }
                                else
                                {
                                    <td class="govuk-table__cell">@Model.DisplayAnswerValue(answer,question)</td>
                                }
                            </tr>
                                }
                            }
                        </tbody>
                    </table>
                }

                @if (Model.Page.HasFeedback)
                {
                    <h2 class="govuk-heading-l">Feedback</h2>

                    foreach (var feedback in Model.Page.Feedback)
                    {
                        <h3 class="govuk-heading-s govuk-!-margin-bottom-1">@feedback.From</h3>
                        <p class="govuk-body-s">@feedback.Date.ToShortDateString()</p>
                        <p class="govuk-body">@feedback.Message</p>
                        @if (feedback.IsNew)
                        {
                            <form class="js-disable-on-submit" asp-action="DeleteFeedback" asp-controller="Application" asp-route-applicationId="@Model.ApplicationId" 
                                  asp-route-sequenceNo="@Model.SequenceNo" asp-route-sectionNo="@Model.SectionNo" asp-route-pageId="@Model.PageId" asp-route-feedbackId="@feedback.Id">
                                <button class="govuk-button govuk-button--warning" type="submit">Delete</button>
                            </form>
                        }
                    }

                    <hr class="govuk-section-break govuk-section-break--visible govuk-!-margin-bottom-6">
                }
            </div>
        </div>

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <form class="js-disable-on-submit" asp-action="Feedback" asp-controller="Application" asp-route-applicationId="@Model.ApplicationId" asp-route-sequenceNo="@Model.SequenceNo" asp-route-sectionNo="@Model.SectionNo" asp-route-pageId="@Model.PageId">
                    <div class="govuk-form-group error-message-container" sfa-anyvalidationerror-class="govuk-form-group--error">
                        <label class="govuk-label govuk-label--l" for="message">
                            Add feedback
                        </label>
                        <span class="govuk-error-message" asp-validation-for="FeedbackMessage"></span>
                        <textarea class="govuk-textarea" rows="15" sfa-validation-for="FeedbackMessage" sfa-validationerror-class="govuk-textarea--error-override" asp-for="FeedbackMessage"></textarea>
                    </div>
                    <button class="govuk-button" type="submit">Add feedback</button>
                </form>
            </div>
        </div>
    }

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p class="govuk-body">
                <a 
                   class="govuk-link" 
                   asp-action="Section" 
                   asp-controller="Application" 
                   asp-route-applicationId="@Model.ApplicationId" 
                   asp-route-sequenceNo="@Model.SequenceNo" 
                   asp-route-sectionNo="@Model.SectionNo" 
                   asp-route-backAction="@Model.BackAction" 
                   asp-route-backController="@Model.BackController" 
                   asp-route-backOrganisationId="@Model.BackOrganisationId">
                Return to section overview
                </a>
            </p>
        </div>
    </div>
</main>