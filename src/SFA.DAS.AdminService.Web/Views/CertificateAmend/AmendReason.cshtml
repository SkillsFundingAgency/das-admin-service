@using SFA.DAS.AssessorService.Domain.Consts;
@using SFA.DAS.AssessorService.Api.Types.Enums;
@model SFA.DAS.AdminService.Web.ViewModels.CertificateAmend.CertificateAmendReasonViewModel

@{
    ViewBag.Heading = "Are you sure this certificate needs amending?";
    ViewBag.Title = (!ViewData.ModelState.IsValid ? "Error: " : "") + ViewBag.Heading;
    Layout = "_Layout";
}

<a class="govuk-back-link" asp-controller="Search" asp-action="Index">Search again</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            <h1 class="govuk-heading-xl">@ViewBag.Heading</h1>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
                    <h2 class="govuk-error-summary__title" id="error-summary-title">
                        There is a problem
                    </h2>
                    <div class="govuk-error-summary__body">
                        <ul class="govuk-list govuk-error-summary__list">
                            <li><a sfa-validation-for="IncidentNumber"></a></li>
                            <li><a sfa-validation-for="Reasons"></a></li>
                            <li><a sfa-validation-for="OtherReason"></a></li>
                        </ul>
                    </div>
                </div>
            }

            @{await Html.RenderPartialAsync("_LearnerSummaryPartial", Model);}

            <form class="apprentice-certificate-check-form js-disable-on-submit" type="post" asp-controller="CertificateAmend" asp-action="AmendReason">
                @Html.HiddenFor(model => model.Learner.CertificateId)
                @Html.HiddenFor(model => model.Learner.CertificateReference)
                @Html.HiddenFor(model => model.Learner.StandardCode)
                @Html.HiddenFor(model => model.Learner.Uln)

                <div class="govuk-form-group" sfa-validation-for="IncidentNumber" sfa-validationerror-class="govuk-form-group--error">
                    <label class="govuk-label govuk-label--m" for="IncidentNumber">
                        Enter the ticket reference number
                    </label>
                    <span class="govuk-error-message" asp-validation-for="IncidentNumber"></span>
                    <input class="govuk-input govuk-input--width-20" id="IncidentNumber" name="IncidentNumber" 
                           sfa-validation-for="IncidentNumber" sfa-validationerror-class="govuk-input--error" 
                           asp-for="IncidentNumber" maxlength="20" />
                </div>

                <div class="govuk-form-group" sfa-validation-for="Reasons" sfa-validationerror-class="govuk-form-group--error">
                    <fieldset class="govuk-fieldset" aria-describedby="amend-reason-hint" asp-for"Reasons" id="Reasons">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            <label class="govuk-label govuk-label--m">
                                Reason for amending certificate information
                            </label>
                        </legend>
                        <div id="amend-reason-hint" class="govuk-hint">
                            Select all that apply; by giving accurate reasons you will be helping us to improve this service.
                        </div>
                        <span class="govuk-error-message" asp-validation-for="Reasons"></span>
                        <div class="govuk-checkboxes" data-module="checkboxes">
                            <div class="govuk-checkboxes__item">
                                <input class="govuk-checkboxes__input" id="reason-apprentice-details" name="reasons" type="checkbox"
                                       value="@AmendReasons.ApprenticeDetails" @(Model.Reasons.Contains(nameof(AmendReasons.ApprenticeDetails)) ? "checked" : string.Empty)>
                                <label class="govuk-label govuk-checkboxes__label" for="reason-apprentice-details">
                                    <text>@Model.GetAmendReasonDescription(AmendReasons.ApprenticeDetails)</text>
                                </label>
                            </div>
                            <div class="govuk-checkboxes__item">
                                <input class="govuk-checkboxes__input" id="reason-apprentice-address" name="reasons" type="checkbox"
                                       value="@AmendReasons.ApprenticeAddress" @(Model.Reasons.Contains(nameof(AmendReasons.ApprenticeAddress)) ? "checked" : string.Empty)>
                                <label class="govuk-label govuk-checkboxes__label" for="reason-apprentice-address">
                                    <text>@Model.GetAmendReasonDescription(AmendReasons.ApprenticeAddress)</text>
                                </label>
                            </div>
                            <div class="govuk-checkboxes__item">
                                <input class="govuk-checkboxes__input" id="reason-employer-address" name="reasons" type="checkbox"
                                       value="@AmendReasons.EmployerAddress" @(Model.Reasons.Contains(nameof(AmendReasons.EmployerAddress)) ? "checked" : string.Empty)>
                                <label class="govuk-label govuk-checkboxes__label" for="reason-employer-address">
                                    <text>@Model.GetAmendReasonDescription(AmendReasons.EmployerAddress)</text>
                                </label>
                            </div>
                            <div class="govuk-checkboxes__item">
                                <input class="govuk-checkboxes__input" id="reason-apprenticeship-details" name="reasons" type="checkbox"
                                       value="@AmendReasons.ApprenticeshipDetails" @(Model.Reasons.Contains(nameof(AmendReasons.ApprenticeshipDetails)) ? "checked" : string.Empty)>
                                <label class="govuk-label govuk-checkboxes__label" for="reason-apprenticeship-details">
                                    <text>@Model.GetAmendReasonDescription(AmendReasons.ApprenticeshipDetails)</text>
                                </label>
                            </div>
                            <div class="govuk-checkboxes__item">
                                <input class="govuk-checkboxes__input" id="reason-other" name="reasons" type="checkbox"
                                       value="Other" @(Model.Reasons.Contains("Other") ? "checked" : string.Empty) data-aria-controls="conditional-other">
                                <label class="govuk-label govuk-checkboxes__label" for="reason-other">
                                    Other
                                </label>
                            </div>
                            <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="conditional-other">
                                <div class="govuk-character-count" data-module="character-count" data-maxlength="200">
                                    <div class="govuk-form-group" sfa-validation-for="OtherReason" sfa-validationerror-class="govuk-form-group--error">
                                        <label class="govuk-label" asp-for="OtherReason">
                                            Give details
                                        </label>
                                        <span class="govuk-error-message" asp-validation-for="OtherReason"></span>
                                        <textarea class="govuk-textarea js-character-count" id="OtherReason" name="OtherReason" asp-for="OtherReason" rows="5" aria-describedby="OtherReason-info">@Model.OtherReason</textarea>
                                        <div id="OtherReason-info" class="govuk-hint govuk-character-count__message" aria-live="polite">
                                            You can enter up to 200 characters
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <button type="submit" class="govuk-button">Continue</button>
            </form>
        </div>
    </div>
</main>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}