@using Microsoft.EntityFrameworkCore.Internal
@using SFA.DAS.AssessorService.ApplyTypes

@model SFA.DAS.AdminService.Web.ViewModels.Apply.Financial.FinancialApplicationViewModel

@{
    ViewBag.Title = "Financial health evaluation";
    Layout = "_Layout";

    var backAction = FinancialApplicationSelectedGrade.Inadequate.Equals(Model.Grade.SelectedGrade) ? "RejectedApplications" : "ClosedApplications";
}

<a asp-action="@backAction" asp-controller="Financial" class="govuk-back-link">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            <h1 class="govuk-heading-xl">Financial health evaluation</h1>
            <h2 class="govuk-heading-m">Organisation details</h2>

            <dl class="govuk-summary-list">
                @if (!string.IsNullOrWhiteSpace(Model.ApplicationReference))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Application reference
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.ApplicationReference
                        </dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.LegalName))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Registered name
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.LegalName
                        </dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.TradingName) || !string.IsNullOrWhiteSpace(Model.ProviderName))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Trading name
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @(Model.TradingName ?? Model.ProviderName)
                        </dd>
                    </div>
                }
                @if (Model.Ukprn.HasValue)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            UKPRN
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.Ukprn
                        </dd>
                    </div>
                }
            </dl>

            @if (!string.IsNullOrWhiteSpace(Model.CompanyNumber))
            {
                <p class="govuk-body">
                    <a class="govuk-link" target="_blank" href="@string.Format("https://beta.companieshouse.gov.uk/company/{0}", Model.CompanyNumber)">View companies house information</a>
                </p>
            }

            <h2 class="govuk-heading-m">Application details</h2>

            <dl class="govuk-summary-list">
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Grade
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.Grade.SelectedGrade
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Date reviewed
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.Grade.GradedDateTime.ToShortDateString()
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Comments
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @(Model.Grade.InadequateMoreInformation ?? "")
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Reviewer
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.Grade.GradedBy
                    </dd>
                </div>
            </dl>

            @if (Model.Section.QnAData.Pages.SelectMany(p => p.Questions).Any(q => q.Input.Type == "FileUpload"))
            {
                <p class="govuk-body">
                    <a class="govuk-link" href="@Url.Action("DownloadFiles", "Financial", new { Model.OrgId, Model.Section.ApplicationId })">Download financial statements</a>
                </p>
            }
        </div>
    </div>

    @if (Model.Section.QnAData.Pages.SelectMany(p => p.Questions).Any(q => q.Input.Type != "FileUpload"))
    {

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <table class="govuk-table govuk-table--s">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th class="govuk-table__header" scope="col">
                                Questions
                            </th>
                            <th class="govuk-table__header" scope="col">
                                Answers
                            </th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                        @foreach (var pg in Model.Section.QnAData.Pages)
                        {
                            foreach (var question in pg.Questions.Where(q => q.Input.Type != "FileUpload"))
                            {
                                <tr class="govuk-table__row">
                                    <td class="govuk-table__cell">@question.Label</td>
                                    <td class="govuk-table__cell">@pg.PageOfAnswers.SelectMany(poa => poa.Answers).SingleOrDefault(a => a.QuestionId == question.QuestionId)?.ToString()</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</main>