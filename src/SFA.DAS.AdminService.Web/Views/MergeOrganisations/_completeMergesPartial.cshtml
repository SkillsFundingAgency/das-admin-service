@using SFA.DAS.AdminService.Web.Domain.Merge;
@using SFA.DAS.AdminService.Web.ViewModels.Shared;
@using SFA.DAS.AssessorService.Api.Types.Models.Merge;

@model SFA.DAS.AdminService.Web.ViewModels.Shared.PaginationViewModel<MergeLogEntry>;

<h2 class="govuk-heading-m"> Complete </h2>

<p class="govuk-body">
    Showing
    @if (Model.PaginatedList.TotalRecordCount > 0)
    {
        @Model.PaginatedList.FirstVisibleItem<text> - </text>@Model.PaginatedList.LastVisibleItem<text> of </text>
    }
    @Model.PaginatedList.TotalRecordCount<text> merges </text>
</p>

<table class="govuk-table govuk-table--small">
    <thead class="govuk-table__head">
        <tr class="govuk-table__row">
            <th scope="col" class="govuk-table__header">
                <sfa-sortable-column-header class=@(Model.Fragment + "-sort govuk-link" + " das-no-wrap")
                                            data-sortColumn="@MergeOrganisationSortColumn.PrimaryEpaoName"
                                            asp-action="@Model.SortColumnAction"
                                            asp-controller="MergeOrganisations"
                                            sfa-sort-column="@MergeOrganisationSortColumn.PrimaryEpaoName"
                                            sfa-table-sort-column="@Model.SortColumn"
                                            sfa-sort-direction="@Model.SortDirection">Primary EPAO</sfa-sortable-column-header>
            </th>
            <th scope="col" class="govuk-table__header">
                <sfa-sortable-column-header class=@(Model.Fragment + "-sort govuk-link" + " das-no-wrap")
                                            data-sortColumn="@MergeOrganisationSortColumn.SecondaryEpaoName"
                                            asp-action="@Model.SortColumnAction"
                                            asp-controller="MergeOrganisations"
                                            sfa-sort-column="@MergeOrganisationSortColumn.SecondaryEpaoName"
                                            sfa-table-sort-column="@Model.SortColumn"
                                            sfa-sort-direction="@Model.SortDirection"> Secondary EPAO</sfa-sortable-column-header>
            </th>

            <th scope="col" class="govuk-table__header">
                <sfa-sortable-column-header class=@(Model.Fragment + "-sort govuk-link" + " das-no-wrap")
                                            data-sortColumn="@MergeOrganisationSortColumn.CompletedAt"
                                            asp-action="@Model.SortColumnAction"
                                            asp-controller="MergeOrganisations"
                                            sfa-sort-column="@MergeOrganisationSortColumn.CompletedAt"
                                            sfa-table-sort-column="@Model.SortColumn"
                                            sfa-sort-direction="@Model.SortDirection">Completion date </sfa-sortable-column-header>
            </th>

            <th scope="col" class="govuk-table__header govuk-table__header--numeric">
                Action
            </th>
        </tr>
    </thead>
    <tbody class="govuk-table__body">
        @if (Model?.PaginatedList != null)
        {
            @foreach (var mergeLogEntry in Model.PaginatedList.Items)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell"> @mergeLogEntry.PrimaryEndPointAssessorOrganisationName </td>

                    <td class="govuk-table__cell"> @mergeLogEntry.SecondaryEndPointAssessorOrganisationName </td>

                    <td class="govuk-table__cell"> @mergeLogEntry.CompletedAt.ToString("dd MMMM yyyy") </td>

                    <td class="govuk-table__cell govuk-table__cell--numeric"> <a class="govuk-link" asp-controller="MergeOrganisations" asp-action="CompletedMergeOverview" asp-route-logId="@mergeLogEntry.Id"> View </a> </td>
                </tr>
            }
        }
    </tbody>
</table>

@if (Model != null)
{
    <form asp-action="@Model.ChangeItemsPerPageAction" asp-controller="OrganisationApplication" method="get" asp-fragment="@Model.Fragment">
        <div class="das-flex-space-around">
            <div>
                <select class="govuk-select govuk-!-margin-right-2" asp-for="ItemsPerPage" asp-items="Model.ItemsPerPageList"></select>
                <label for="ApplicationsPerPage">Applications per page</label>
            </div>
            <div class="das-pagination-links">
                @{await Html.RenderPartialAsync("_PaginationLinksPartial", new PaginationLinksViewModel
                    {
                        PaginatedList = Model.PaginatedList,
                        ChangePageAction = Model.ChangePageAction,
                        ChangePageController = "MergeOrganisations",
                        Fragment = Model.Fragment
                    });}
            </div>
        </div>
        <button class="govuk-button govuk-button--secondary govuk-!-margin-bottom-0 govuk-!-margin-top-3 js-hidden" type="submit">
            Update table
        </button>
    </form>
}